/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.ImageIcon;
import java.awt.Image;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.io.FileOutputStream;
import org.apache.poi.ss.usermodel.Workbook;
import javax.swing.JTable;
import javax.swing.table.TableModel;







/**
 *
 * @author ASUS
 */
public class FormPeminjaman extends javax.swing.JFrame {

    /**
     * Creates new form FormPeminjaman
     */
    public FormPeminjaman() {
        initComponents();
        tampilData();
        setTitle("Aplikasi Perpustakaan - Andika Febrian N");
        
        listRekomendasi.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
    public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        if (!evt.getValueIsAdjusting()) {
            String selected = listRekomendasi.getSelectedValue();
            if (selected != null) {
                ImageIcon icon = null;

                if (selected.contains("Teluk Alaska")) {
                    icon = new ImageIcon(getClass().getResource("/images/teluk_alaska.jpg"));
                } else if (selected.contains("Bandung After Rain")) {
                    icon = new ImageIcon(getClass().getResource("/images/bandung_after_rain.jpeg"));
                } else if (selected.contains("Rumah Pohon Dikala Senja")) {
                    icon = new ImageIcon(getClass().getResource("/images/rumah_pohon_dikala_senja.jpg"));
                } else if (selected.contains("Kumpulan Cerpen Takdir")) {
                    icon = new ImageIcon(getClass().getResource("/images/kumpulan_cerpen_takdir.jpg"));
                }

                if (icon != null) {
                    Image img = icon.getImage();
                    Image scaledImg = img.getScaledInstance(120, 160, Image.SCALE_SMOOTH); // ukuran gambar
                    lblCover.setIcon(new ImageIcon(scaledImg));
                } else {
                    lblCover.setIcon(null); // jika tidak ada gambar
                }
            }
        }
    }
});
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupJenis = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtKodeBuku = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtJudulBuku = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNamaPeminjam = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        rbUmum = new javax.swing.JRadioButton();
        rbMahasiswa = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        cbGenre = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        spinnerHari = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        datePinjam = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCatatan = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        btnPilihFile = new javax.swing.JButton();
        txtPath = new javax.swing.JTextField();
        cbSudahKembali = new javax.swing.JCheckBox();
        btnSimpan = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listRekomendasi = new javax.swing.JList<>();
        lblCover = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPeminjaman = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Form Peminjaman");

        jLabel2.setText("Kode Buku");

        jLabel3.setText("Judul Buku");

        txtJudulBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJudulBukuActionPerformed(evt);
            }
        });

        jLabel4.setText("Nama Peminjam");

        txtNamaPeminjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaPeminjamActionPerformed(evt);
            }
        });

        jLabel5.setText("Pilih");

        buttonGroupJenis.add(rbUmum);
        rbUmum.setText("Umum");

        buttonGroupJenis.add(rbMahasiswa);
        rbMahasiswa.setText("Mahasiswa");
        rbMahasiswa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMahasiswaActionPerformed(evt);
            }
        });

        jLabel6.setText("Genre Buku");

        cbGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fiksi - Novel", "Fiksi - Cerpen", "Fiksi - Fantasi", "Fiksi - Misteri / Thriller", "Fiksi - Romantis", "Fiksi - Petualangan", "Fiksi - Drama", "Fiksi - Sains Fiksi (Sci-Fi)", "Fiksi - Horor", "Nonfiksi - Biografi", "Nonfiksi - Ensiklopedia", "Nonfiksi - Sejarah", "Nonfiksi - Sains / Ilmu Pengetahuan", "Nonfiksi - Teknologi", "Nonfiksi - Motivasi / Self-help", "Nonfiksi - Pendidikan", "Nonfiksi - Agama", "Nonfiksi - Politik / Sosial" }));

        jLabel7.setText("Lama Peminjaman");

        jLabel8.setText("Hari");

        jLabel9.setText("Tanggal Peminjaman");

        txtCatatan.setColumns(20);
        txtCatatan.setRows(5);
        jScrollPane1.setViewportView(txtCatatan);

        jLabel10.setText("Catatan Peminjam");

        btnPilihFile.setText("Pilih File");
        btnPilihFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihFileActionPerformed(evt);
            }
        });

        cbSudahKembali.setText("Status Buku Dikembalikan");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel11.setText("Rekomendasi Buku");

        listRekomendasi.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Teluk Alaska - Novel", "Bandung After Rain - Novel", "Rumah Pohon Dikala Senja - Cerpen", "Kumpulan Cerpen Takdir - Cerpen", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listRekomendasi);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(59, 59, 59)
                                    .addComponent(txtJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(txtKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4)))
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNamaPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rbMahasiswa, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rbUmum, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spinnerHari, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8))
                                    .addComponent(cbGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(btnPilihFile)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(datePinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnSimpan)
                        .addGap(37, 37, 37)
                        .addComponent(btnReset)))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSudahKembali, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(lblCover, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(64, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtNamaPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rbMahasiswa)
                    .addComponent(rbUmum)
                    .addComponent(btnPilihFile)
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSudahKembali))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(spinnerHari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(datePinjam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnReset))
                        .addGap(71, 71, 71))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblCover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(67, 67, 67))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Form", jPanel1);

        tabelPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode_Buku", "Judul_Buku", "Nama_Peminjam", "Jenis_Peminjam", "Genre_Buku", "Lama_Pinjam", "Tanggal_Pinjam", "Sudah_Kembali", "Catatan", "Path_File"
            }
        ));
        tabelPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelPeminjaman);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnExport.setText("Export Excel");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addGap(33, 33, 33)
                        .addComponent(btnHapus)
                        .addGap(36, 36, 36)
                        .addComponent(btnCetak)
                        .addGap(31, 31, 31)
                        .addComponent(btnExport))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 983, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus)
                    .addComponent(btnCetak)
                    .addComponent(btnExport))
                .addContainerGap(199, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Data", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1066, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(431, 431, 431)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtJudulBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJudulBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJudulBukuActionPerformed

    private void txtNamaPeminjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaPeminjamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaPeminjamActionPerformed

    private void rbMahasiswaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMahasiswaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMahasiswaActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
try {
    Connection con = koneksi.koneksi.getConnection();
    String sql = "INSERT INTO peminjaman (kode_buku, judul_buku, nama_peminjam, jenis_peminjam, genre_buku, lama_pinjam, tanggal_pinjam, sudah_kembali, catatan, path_file) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
    PreparedStatement ps = con.prepareStatement(sql);

    ps.setString(1, txtKodeBuku.getText());
    ps.setString(2, txtJudulBuku.getText());
    ps.setString(3, txtNamaPeminjam.getText());

    String jenis = rbMahasiswa.isSelected() ? "Mahasiswa" : "Umum";
    ps.setString(4, jenis);

    ps.setString(5, cbGenre.getSelectedItem().toString());
    ps.setInt(6, (int) spinnerHari.getValue());

    java.util.Date tgl = datePinjam.getDate();
    ps.setDate(7, new java.sql.Date(tgl.getTime()));

    ps.setBoolean(8, cbSudahKembali.isSelected());
    ps.setString(9, txtCatatan.getText());
    
    ps.setString(10, txtPath.getText());

    ps.executeUpdate();
    JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
    
    resetForm();     // ← Bersihkan form
    tampilData();
    
    // (Nanti kita buat method tampilData(); untuk refresh JTable)
    
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Gagal simpan: " + e.getMessage());
}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void tabelPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPeminjamanMouseClicked
int baris = tabelPeminjaman.rowAtPoint(evt.getPoint());

txtKodeBuku.setText(tabelPeminjaman.getValueAt(baris, 0).toString());
txtJudulBuku.setText(tabelPeminjaman.getValueAt(baris, 1).toString());
txtNamaPeminjam.setText(tabelPeminjaman.getValueAt(baris, 2).toString());

String jenis = tabelPeminjaman.getValueAt(baris, 3).toString();
if (jenis.equals("Mahasiswa")) {
    rbMahasiswa.setSelected(true);
} else {
    rbUmum.setSelected(true);
}

cbGenre.setSelectedItem(tabelPeminjaman.getValueAt(baris, 4).toString());
spinnerHari.setValue(Integer.valueOf(tabelPeminjaman.getValueAt(baris, 5).toString()));

java.util.Date date = java.sql.Date.valueOf(tabelPeminjaman.getValueAt(baris, 6).toString());
datePinjam.setDate(date);

String kembali = tabelPeminjaman.getValueAt(baris, 7).toString();
cbSudahKembali.setSelected(kembali.equals("Ya"));

txtCatatan.setText(tabelPeminjaman.getValueAt(baris, 8).toString());
txtPath.setText(tabelPeminjaman.getValueAt(baris, 9).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelPeminjamanMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
try {
    Connection con = koneksi.koneksi.getConnection();
    String sql = "UPDATE peminjaman SET judul_buku=?, nama_peminjam=?, jenis_peminjam=?, genre_buku=?, lama_pinjam=?, tanggal_pinjam=?, sudah_kembali=?, catatan=?, path_file=? WHERE kode_buku=?";
    PreparedStatement ps = con.prepareStatement(sql);

    ps.setString(1, txtJudulBuku.getText());
    ps.setString(2, txtNamaPeminjam.getText());

    String jenis = rbMahasiswa.isSelected() ? "Mahasiswa" : "Umum";
    ps.setString(3, jenis);

    ps.setString(4, cbGenre.getSelectedItem().toString());
    ps.setInt(5, (int) spinnerHari.getValue());

    java.util.Date tgl = datePinjam.getDate();
    ps.setDate(6, new java.sql.Date(tgl.getTime()));

    ps.setBoolean(7, cbSudahKembali.isSelected());
    ps.setString(8, txtCatatan.getText());
    ps.setString(9, txtPath.getText());

    ps.setString(10, txtKodeBuku.getText());

    ps.executeUpdate();
    JOptionPane.showMessageDialog(this, "Data berhasil diubah!");
    tampilData(); // refresh
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Gagal edit: " + e.getMessage());
}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
resetForm();        // TODO add your handling code here:
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
int baris = tabelPeminjaman.getSelectedRow();

    if (baris == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus dulu!");
        return;
    }

    String kodeBuku = txtKodeBuku.getText(); // ambil ID unik dari baris

    int konfirmasi = JOptionPane.showConfirmDialog(this,
            "Yakin mau hapus data ini?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION);

    if (konfirmasi == JOptionPane.YES_OPTION) {
        try {
            Connection con = koneksi.koneksi.getConnection();
            String sql = "DELETE FROM peminjaman WHERE kode_buku = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, kodeBuku);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");

            tampilData();   // refresh JTable
            resetForm();    // bersihkan form input

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menghapus data: " + e.getMessage());
        }
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
try {
        Connection conn = koneksi.koneksi.getConnection(); // Pastikan class koneksi kamu benar

        // Path file .jasper (bisa sesuaikan lokasi bila perlu)
        String reportPath = "src/report/laporan_peminjaman.jasper";

        JasperPrint jp = JasperFillManager.fillReport(reportPath, null, conn);
        JasperViewer.viewReport(jp, false); // false agar aplikasi tidak tertutup

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal menampilkan laporan: \n" + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnPilihFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihFileActionPerformed
JFileChooser fileChooser = new JFileChooser(); // buat file chooser
    int returnValue = fileChooser.showOpenDialog(this); // buka dialog

    if (returnValue == JFileChooser.APPROVE_OPTION) { // kalau user pilih file
        File selectedFile = fileChooser.getSelectedFile(); // ambil file yang dipilih
        txtPath.setText(selectedFile.getAbsolutePath()); // tampilkan path ke textfield
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnPilihFileActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
exportToExcel(tabelPeminjaman);        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportActionPerformed

    private void resetForm() {
    txtKodeBuku.setText("");
    txtJudulBuku.setText("");
    txtNamaPeminjam.setText("");
    rbMahasiswa.setSelected(true); // default radio button
    cbGenre.setSelectedIndex(0);   // reset ke item pertama
    spinnerHari.setValue(0);       // default hari peminjaman
    datePinjam.setDate(null);      // reset tanggal
    cbSudahKembali.setSelected(false); // uncheck checkbox
    txtCatatan.setText("");
    txtPath.setText("");// bersihkan catatan (JTextArea)
}

    
    
    private void tampilData() {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Kode Buku");
    model.addColumn("Judul Buku");
    model.addColumn("Nama Peminjam");
    model.addColumn("Jenis");
    model.addColumn("Genre");
    model.addColumn("Lama");
    model.addColumn("Tanggal Pinjam");
    model.addColumn("Kembali?");
    model.addColumn("Catatan");
    model.addColumn("Path File");

    try {
        Connection con = koneksi.koneksi.getConnection();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM peminjaman");

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("kode_buku"),
                rs.getString("judul_buku"),
                rs.getString("nama_peminjam"),
                rs.getString("jenis_peminjam"),
                rs.getString("genre_buku"),
                rs.getInt("lama_pinjam"),
                rs.getDate("tanggal_pinjam"),
                rs.getBoolean("sudah_kembali") ? "Ya" : "Belum",
                rs.getString("catatan"),
                rs.getString("path_file")
            });
        }

        tabelPeminjaman.setModel(model);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Gagal tampilkan data: " + e.getMessage());
    }
}
    
    public void exportToExcel(JTable table){
        Workbook workbook = new XSSFWorkbook();
        try{
            Sheet sheet = workbook.createSheet("Data Peminjaman");
            
            if (table.getRowCount()>0){
                TableModel model = table.getModel();
                
                Row headerRow = sheet.createRow(0);
                for(int col = 0; col < model.getColumnCount(); col++){
                    Cell cell = headerRow.createCell(col);
                    cell.setCellValue(model.getColumnName(col));
                }
                for(int row = 0; row < model.getRowCount(); row++){
                    Row dataRow = sheet.createRow(row + 1);
                    for(int col = 0; col < model.getColumnCount(); col++){
                        Object value = model.getValueAt(row, col);
                        Cell cell = dataRow.createCell(col);
                        cell.setCellValue(value !=null? value.toString(): "");
                    }
                }
        } else {
            String sql = "SELECT * FROM peminjaman";
            Connection conn = koneksi.koneksi.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
                
            String[] kolom = {"Kode Buku", "Judul Buku", "Nama Peminjam", "Jenis Peminjam", "Genre", "Lama Pinjam", "Tanggal Pinjam", "Kembali", "Catatan", "File"};
            Row header = sheet.createRow(0);
            for(int i = 0; i < kolom.length; i++){
                Cell cell = header.createCell(i);
                cell.setCellValue(kolom[i]);
            }
                
            int rowIndex = 1;
            while(rs.next()){
                Row row = sheet.createRow(rowIndex++);
                row.createCell(0).setCellValue(rs.getString("kode_buku"));
                row.createCell(1).setCellValue(rs.getString("judul_buku"));
                row.createCell(2).setCellValue(rs.getString("nama_peminjam"));
                row.createCell(3).setCellValue(rs.getString("jenis_peminjam"));
                row.createCell(4).setCellValue(rs.getString("genre_buku"));
                row.createCell(5).setCellValue(rs.getString("lama_pinjam"));
                row.createCell(6).setCellValue(rs.getString("tanggal_pinjam").toString());
                row.createCell(7).setCellValue(rs.getString("sudah_kembali"));
                row.createCell(8).setCellValue(rs.getString("catatan"));
                row.createCell(9).setCellValue(rs.getString("path_file"));
            }
        }

        FileOutputStream out = new FileOutputStream("Data_Peminjam.xlsx");
        workbook.write(out);
        out.close();
        
        JOptionPane.showMessageDialog(null, "Data berhasil diekspor ke Excell");
    }catch (Exception e){
        JOptionPane.showMessageDialog(null, "Gagal ekspor: " + e.getMessage());
    }
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPeminjaman().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnPilihFile;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSimpan;
    private javax.swing.ButtonGroup buttonGroupJenis;
    private javax.swing.JComboBox<String> cbGenre;
    private javax.swing.JCheckBox cbSudahKembali;
    private com.toedter.calendar.JDateChooser datePinjam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCover;
    private javax.swing.JList<String> listRekomendasi;
    private javax.swing.JRadioButton rbMahasiswa;
    private javax.swing.JRadioButton rbUmum;
    private javax.swing.JSpinner spinnerHari;
    private javax.swing.JTable tabelPeminjaman;
    private javax.swing.JTextArea txtCatatan;
    private javax.swing.JTextField txtJudulBuku;
    private javax.swing.JTextField txtKodeBuku;
    private javax.swing.JTextField txtNamaPeminjam;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables
}
